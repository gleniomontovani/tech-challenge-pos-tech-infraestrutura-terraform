name: Create Infrastructure

on:
  workflow_dispatch:
    inputs:
      dir:
        description: 'DiretÃ³rio com os recursos a serem criados.'
        required: true
        default: 'terraform'

jobs:
  terraform:
    name: Create Infrastructure EKS
    env:
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_account: ${{ secrets.AWS_ACCOUNT }}

      TF_VAR_user_pool: ${{ secrets.USER_POOL_COGNITO }}
      TF_VAR_user_pool_client: ${{ secrets.USER_POOL_CLIENT }}
      TF_VAR_allowed_oauth_scopes: ${{ secrets.ALLOWED_OAUTH_SCOPES }}
      TF_VAR_user_pool_domain: ${{ secrets.COGNITO_USER_POOL_DOMAIN }}
      TF_VAR_cognito_resource_server_name: ${{ secrets.COGNITO_RESOURCE_SERVER_NAME }}
      TF_VAR_cognito_resource_server_identifier: ${{ secrets.COGNITO_RESOURCE_SERVER_IDENTIFIER }}
      TF_VAR_cognito_scope_name: ${{ secrets.COGNITO_SCOPE_NAME }}


    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        id: init
        run: terraform init 
        working-directory: ./terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Plan Terraform
        run: terraform plan -out=tfplan -input=true 
        working-directory: ./terraform  

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan
          user_pool=$(terraform output -raw aws_cognito_user_pool  | awk 'NR==3' | awk -F' ' '{print $NF}')
          echo "$user_pool" > user_pool.txt
          cat user_pool.txt
        working-directory: ./terraform

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli   

      - name: Upload data to S3
        run: |
          cd terraform
          aws s3 cp user_pool.txt s3://${{ secrets.AWS_BUCKET }}/${{ secrets.AWS_S3_BUCKET_SOURCE_GATEWAY }}/user_pool --acl private
          rm -r user_pool.txt
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  
